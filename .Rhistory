grad <- 0:2000
s <- sample(grad, 100)
hist(s)
s <- sample(grad, 100)
hist(s)
s <- sample(grad, 100)
hist(s)
for(i in 1:100){
s1 <- sample(grad, 100)
s <- cbind(s, s1)
}
ncol(s)
for(i in 1:101){
d <- density(s[, i])
}
for(i in 1:101){
d[[i]] <- density(s[, i])
}
plot(d[[1]])
d[[1]]$x
d[[2]]$x
d <- list()
for(i in 1:101){
d[[i]] <- density(s[, i], n = 200)
}
plot(d[[1]])
d[[2]]$x
for(i in 1:101){
d[[i]] <- density(s[, i], n = 200,
cut = c(0, 2000))
}
for(i in 1:101){
d[[i]] <- density(s[, i], n = 200,
from = 0, to = 2000)
}
plot(d[[1]])
d[[2]]$x
for(i in 2,:101){
plot(d[[1]])
for(i in 2,:101){
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$x)
}
d[[i]]$x
plot(d[[1]])
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$y)
}
plot(d[[1]], ylim = c(0, 7e-04))
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$y)
}
plot(d[[1]], ylim = c(0, 7e-04))
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$y, col = "grey")
}
lines(d[[1]]$x, d[[1]]$y)
plot(d[[1]], ylim = c(0, 7e-04), main = "Especies en gradiente elevacional",
x = "Elevación", y = "Frecuencia")
plot(d[[1]], ylim = c(0, 7e-04), main = "Especies en gradiente elevacional",
xlab = "Elevación", ylab = "Frecuencia")
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$y, col = "grey")
}
lines(d[[1]]$x, d[[1]]$y)
pdf("Simulation-elevacion.png", width = 500, height = 300)
plot(d[[1]], ylim = c(0, 7e-04), main = "Especies en gradiente elevacional",
xlab = "Elevación", ylab = "Frecuencia")
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$y, col = "grey")
}
lines(d[[1]]$x, d[[1]]$y)
dev.off()
png("Simulation-elevacion.png", width = 500, height = 300)
plot(d[[1]], ylim = c(0, 7e-04), main = "Especies en gradiente elevacional",
xlab = "Elevación", ylab = "Frecuencia")
for(i in 2:101){
lines(d[[i]]$x, d[[i]]$y, col = "grey")
}
lines(d[[1]]$x, d[[1]]$y)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(dismo)
sp <- gbif(genus = "Leopardus", species = "wiedii")
library(dismo)
sp <- gbif(genus = "Cachryx", species = "defensor")
class(sp)
head(sp)
dim(tabla)
dim(sp)
names(sp)
sp$lon
knitr::kable(head(sp[, c("lon", "lat")]))
knitr::kable(head(sp[, c("lon", "lat")]))
knitr::kable(tail(sp[, c("lon", "lat")]))
xy <- subset(sp, c("lon", "lat"))
xy <- subset(sp, select = c("lon", "lat"))
xy
which(!is.unique(prod))
which(prod %in% unique(prod))
unique(prod)
prod
prod <- with(sp, lon * lat)
prod
which(prod %in% unique(prod))
p <- with(sp, lon * lat)
unicos <- unique(p)
unicos
length(unicos)
p <- with(xy.na, lon * lat)
xy <- subset(sp, select = c("lon", "lat"))
xy.na <- na.omit(xy)
p <- with(xy.na, lon * lat)
unicos <- unique(p)
unicos
xy.unicos <- unique(xy.na)
dim(xy.unicos)
library(terra)
library(terra)
v <- vect("Datos/Peninsula.gpkg")
?over
over(xy.unicos, v)
library(rgdal)
v <- readOGR("Datos/Peninsula.gpkg")
over(xy.unicos, v)
over(xy.unicos[, c("lon", "lat")], v)
v <- vect("Datos/Peninsula.gpkg") #Importando área de estudio
coordinates(xy.unicos) <- ~ lon + lat
over(xy.unicos, v)
over(v, xy.unicos)
knitr::opts_chunk$set(echo = TRUE)
library(dismo)
sp <- gbif(genus = "Cachryx", species = "defensor")
class(sp)
xy <- subset(sp, select = c("lon", "lat"))
xy.na <- na.omit(xy)
p <- with(xy.na, lon * lat)
xy.na$p <- p
xy.unicos <- unique(xy.na)
dim(xy.unicos)
library(terra)
v <- vect("Datos/Peninsula.gpkg") #Importando área de estudio
terra::extract(v, xy.unicos)
coordinates(xy.s) <- ~ lon + lat
xy.s <- xy.unicos
coordinates(xy.s) <- ~ lon + lat
terra::extract(v, xy.s)
xy.s <- as.points(xy.s)
xy.s <- as.points(xy.unicos[, c("lat", "lon")])
xy.s <- vect(xy.unicos[, c("lat", "lon")])
terra::extract(v, xy.s)
plot(v)
points(xy.s)
e <- terra::extract(v, xy.s)
e
e$GID_0
e.na <- which(!is.na(e$GID_0))
xy.corr <- xy.unicos[e.na, ]
plot(v); points(xy.corr[, c("lon", "lat")])
library(terra)
v <- vect("Datos/Peninsula.gpkg") #Importando área de estudio
xy.s <- vect(xy.unicos[, c("lat", "lon")])
plot(v); points(xy.s)
e <- terra::extract(v, xy.s)
e.na <- which(!is.na(e$GID_0))
xy.corr <- xy.unicos[e.na, ]
plot(v); points(xy.corr[, c("lon", "lat")], pch = 20)
writeVector(vect(xv.corr[, c("lon", "lat")]), filename = "Datos/Cachryx", filetype = "GPKG")
writeVector(vect(xy.corr[, c("lon", "lat")]), filename = "Datos/Cachryx", filetype = "GPKG")
